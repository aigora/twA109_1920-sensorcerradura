#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>
//Declaracion de Funciones
int **Reservar(int F, int C);
int comparador( int x, int y, int **M,int F, int C);
void Imprime(int **I,int F,int C);
int **Aleatorio (int F,int C);
void leer (int **I,int F,int C);
int **Cambiador (int **C,int n, int m,int ET,int SM);

//Funcion Principal
int main(int argc, char *argv[]) {
int Alto,Ancho,N;
int S=0,n=0;
int i,j,Estado,respuesta;
char rp;
rp ='A';
do{
system("cls");
switch(rp){
case 'A':
printf("Introduzca cuantas unidades Altura y Anchura desea para el perimetro del experimento \n");
scanf("%d %d",&Alto,&Ancho);
int **Vieja,**Nueva;
Nueva = Reservar(Alto,Ancho);
printf("Introduzca el numero de iteraciones\n");
scanf("%d",&N);
case 'C':
printf("Â¿Quiere una Matriz aleatoria o propia?\n");
do{
printf("Aleatoria:1 Propia:2\n");
scanf("%d",&respuesta);
system("cls");
if (respuesta==2){
Vieja = Reservar(Alto,Ancho);
printf("Introduzca la Matriz inicial 1=Encendido 0=Apagado\n");
leer(Vieja,Alto,Ancho);
system("cls");
Imprime(Vieja,Alto,Ancho);}
else {if (respuesta == 1){
Vieja = Aleatorio(Alto,Ancho);
Imprime(Vieja,Alto,Ancho);
}}}while (respuesta != 1 && respuesta != 2);
case 'B':
if (rp=='B'){
printf("Introduzca el numero de iteraciones\n");
scanf("%d",&N);
Imprime(Vieja,Alto,Ancho);}
printf("PULSE ENTER PARA EMPEZAR\n");
system("pause");
case 'D':
fflush(stdin);
 while(n<N) {
 	Sleep(5);
     system("cls");
      for (i=0;i<Alto;i++){
       for(j=0;j<Ancho;j++){
          S = comparador(i,j,Vieja,Alto,Ancho);
          Estado = Vieja[i][j];
          //Cambio a la nueva Matriz
          Cambiador(Nueva,i,j,Estado,S);}
        }
     Imprime(Nueva,Alto,Ancho);
     Vieja = Nueva;
     n++;
    }
n=0;
do{
printf("MENU:\nCambiar todo->A \nCambiar numero de iteraciones->B \nCambiar Matriz->C \nRepetir->D \nSalir->F\n");
scanf("%c",&rp);}while(rp!='A'&&rp!='B'&&rp!='C'&&rp!='D'&&rp!='F');}
}while(rp!='F');
return 0;
}

// Funcion de comparacion de elementos de la Matriz
int comparador( int x, int y, int **M,int F, int C){
int i ,j,fila,colm, suma = 0 ;	
for (i= -1;i<2;i++){
   for(j= -1;j<2;j++){	
     fila= (x+i+F)%F;
     colm= (y+j+C)%C;
     suma = suma + M[fila][colm];
    }}
suma = suma - M[x][y];
return suma;
}


//Funcion para reservar memoria
int **Reservar(int F, int C){
int **Matriz,i;
Matriz = (int**)malloc(F*sizeof(int*));
   if (Matriz == NULL){printf("No se ha podido reservar espacio de meoria");
                      exit(1);
}
for(i=0;i<F;i++){
   Matriz[i] = (int*)malloc(C*sizeof(int));
   if (Matriz[i] == NULL){printf("No se ha podido reservar espacio de meoria");
                      exit(1);}
  }
return Matriz;
}

//Generador de Matriz aleatoria
int **Aleatorio (int F,int C){
int **A,i,j;
srand(time(NULL));
A =Reservar (F,C);
for (i=0;i<F;i++){
   for(j=0;j<C;j++){
     A[i][j]=0+rand()%(1-0+1);
  }}
 return A;
}

//Impresora de Matrices
void Imprime(int **I,int F,int C){
int i,j;
for (i=0;i<F;i++){
   for(j=0;j<C;j++){ 
     if(I[i][j]==1)
     printf("* ");
     else{if(I[i][j]==0)
     printf("  ");} 
    }
 printf("\n");}
 }
 
 //Funcion que cambia los valores de la matriz Nueva
int **Cambiador (int **C,int n, int m,int ET,int SM){
if( ET==0&&SM==3){
    C[n][m]=1;}
else{if(ET==1&&(SM<2||SM>3))
      C[n][m]=0;
       else C[n][m]= ET;}
return C;}
//lector de Matrices
void leer(int **I,int F,int C){
int i,j;
for (i=0;i<F;i++){
       for(j=0;j<C;j++){
       	scanf("%d",&I[i][j]);}}}
